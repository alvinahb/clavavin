{{template "base" .}}

{{define "css"}}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.1/dist/css/datepicker.min.css">
    <style>
        .btn {
            background-color: rgb(8, 160, 8);
            border-color: rgb(8, 160, 8);
        }
        .btn:hover {
            background-color: rgb(8, 160, 8);
            border-color: rgb(8, 160, 8);
        }
        .btn:active {
            background-color: rgb(8, 160, 8);
            border-color: rgb(8, 160, 8);
        }
    </style>
{{end}}

{{define "content"}}

    {{$res := index .Data "wine"}}

    <form action="/nouveau-vin" method="post" novalidate>  <!-- class="needs-validation" removed -->
        <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
        <div class="row">
            <div class="col-4 align-self-center">
                <div class="row justify-content-center">
                    <div class="col-10">
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                {{with .Form.Errors.Get "name"}}
                                    <label class="text-danger">{{.}}</label>
                                {{end}}
                                <input type="text" class="form-control text-center {{with .Form.Errors.Get "name"}} is-invalid {{end}}"
                                    name="name" placeholder="Nom de la bouteille*" value="{{$res.Name}}" required>
                            </div>
                        </div>
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                {{with .Form.Errors.Get "domain"}}
                                    <label class="text-danger">{{.}}</label>
                                {{end}}
                                <input type="text" class="form-control text-center {{with .Form.Errors.Get "domain"}} is-invalid {{end}}"
                                    name="domain" placeholder="Nom du domaine*" value="{{$res.Domain}}" required>
                            </div>
                        </div>
                        <div class="row mb-2 mt-2 justify-content-center">
                            <div class="col-6">
                                {{with .Form.Errors.Get "year"}}
                                    <label class="text-danger">{{.}}</label>
                                {{end}}
                                <input type="text" class="form-control text-center {{with .Form.Errors.Get "year"}} is-invalid {{end}}"
                                    name="year" placeholder="Millésime*" value="{{$res.Year}}" required>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-4">
                <div class="row justify-content-center">
                    <div class="col-10">
                        <div class="row mb-2 mt-2">
                            <div class="col-4">
                                <select class="form-select" name="appellationType">
                                    <option value="" selected></option>
                                    <option value="AOC">AOC</option>
                                    <option value="AOP">AOP</option>
                                </select>                        
                            </div>
                            <div class="col-8">
                                <input type="text" class="form-control" name="appellationName" placeholder="Appellation">
                            </div>
                        </div>
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                {{with .Form.Errors.Get "location"}}
                                    <label class="text-danger">{{.}}</label>
                                {{end}}
                                <input type="text" class="form-control text-center {{with .Form.Errors.Get "location"}} is-invalid {{end}}"
                                    name="location" placeholder="Origine géographique*" value="{{$res.Location}}" required>
                            </div>
                        </div>
                        <div class="row mb-2 mt-2">
                            <div class="col-6">
                                {{with .Form.Errors.Get "color"}}
                                    <label class="text-danger">{{.}}</label>
                                {{end}}
                                <input type="text" class="form-control text-center {{with .Form.Errors.Get "color"}} is-invalid {{end}}"
                                    name="color" placeholder="Couleur*" value="{{$res.Color}}" required>
                            </div>
                            <div class="col-6">
                                <input type="text" class="form-control text-center" name="culture" placeholder="Culture">
                            </div>
                        </div>
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                <input type="text" class="form-control text-center" name="variety" placeholder="Cépage(s)">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row justify-content-center mt-4">
                    <div class="col-10">
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                <input type="text" class="form-control text-center" name="robe" placeholder="Robe">
                            </div>
                        </div>
                        <div class="row mb-2 mt-2 justify-content-center">
                            <div class="col-12">
                                <input type="text" class="form-control text-center" name="nose" placeholder="Nez">
                            </div>
                        </div>
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                <input type="text" class="form-control text-center" name="taste" placeholder="Palais">
                            </div>
                        </div>
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                <input type="text" class="form-control text-center" name="associations" placeholder="Association de plats">
                            </div>
                        </div>
                        <div class="row mb-2 mt-2">
                            <div class="col-12">
                                <input type="text" class="form-control text-center" name="season" placeholder="Saison">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-4 align-self-center">
                <div class="row justify-content-center">
                    <div class="col-10">
                        <div class="row mb-2 mt-2">
                            <div class="col-12" style="font-style: italic; text-align: center;">
                                Possibilité d'ajouter une photo à venir !
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="text-align: center;">
            <div>
                <button type="submit" class="btn btn-primary mt-5" id="submitButton">Valider et ajouter</button>
            </div>
        </div>
    </form>
{{end}}

{{define "js"}}
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.1/dist/js/datepicker-full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Date picker
        const elem = document.querySelector('input[name="year"]');
        const datepicker = new Datepicker(elem, {
            pickLevel: 2,
            format: "yyyy",
        });

        // Form validation
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
                }, false)
            })
        })()

        // Result alert
        let attention = Prompt();
        function Prompt() {
            let toast = function(c) {
                const {
                    msg = "",
                    icon = "",
                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: 'top-end',
                    icon: "success",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({})
            }

            return {
                toast: toast,
            }
        }

        {{with .Error}}
            attention.toast({icon: "error", msg: {{.}}});
        {{end}}

        {{with .Flash}}
            attention.toast({icon: "success", msg: {{.}}});
        {{end}}

    </script>
{{end}}